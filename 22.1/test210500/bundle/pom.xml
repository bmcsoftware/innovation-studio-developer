<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
    <artifactId>test210500-all</artifactId>
    <groupId>com.example</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

    <groupId>com.example</groupId>
    <artifactId>test210500</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <name>Test 21.05.00</name>
    <description>The Test 21.05.00 application.</description>

    <properties>
        <!-- Comma separated Bundle Dependencies with version.  -->
        <rx-sdk.bundleDependencies>standardlib;${rx-sdk.version},com.bmc.arsys.rx.approval;${rx-sdk.version},com.bmc.arsys.rx.foundation;${rx-sdk.version},com.bmc.arsys.rx.assignment;${rx-sdk.version}</rx-sdk.bundleDependencies>
    </properties>

    <dependencies>

        <!-- Framework Dependencies -->
        <dependency>
            <groupId>${rx-sdk.groupId}</groupId>
            <artifactId>com.bmc.arsys.rx.standardlib</artifactId>
            <version>${rx-sdk.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${rx-sdk.groupId}</groupId>
            <artifactId>com.bmc.arsys.rx.services</artifactId>
            <version>${rx-sdk.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${rx-sdk.groupId}</groupId>
            <artifactId>com.bmc.arsys.rx.application</artifactId>
            <version>${rx-sdk.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Bundle Specific Dependencies -->
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>osgi</artifactId>
            <version>${equinox.framework.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${javax.ws.rs.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Reference App Deployment Dependencies -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
             <scope>provided</scope>
        </dependency> 
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- for compiling with aspects -->
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.aspectj</artifactId>
            <version>${servicemix-aspectj.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Needed in support of @RxTransactional -->
        <dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.spring-aspects</artifactId>
			<version>${servicemix-spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>org.apache.servicemix.bundles</groupId>
			<artifactId>org.apache.servicemix.bundles.spring-tx</artifactId>
			<version>${servicemix-spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--  For validating action parameters and custom fields -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Dependencies for Unit Test -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependency for Twilio text service :: BEGIN  -->
        <dependency>
            <groupId>com.twilio.sdk</groupId>
            <artifactId>twilio</artifactId>
            <version>(7.0,7.9)</version>
        </dependency>
        <!-- Those two extra dependencies are needed for Twilio... -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>
        <dependency>
            <groupId>com.google.collections</groupId>
            <artifactId>google-collections</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- Dependency for Twilio text service :: END  -->
        <!-- Used to convert from Xml to Json -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20230227</version>
        </dependency>
        <!-- Used to convert from Xml to Json :: END -->
    </dependencies>

    <profiles>
        <profile>
            <id>skipUICodeGeneration</id>
            <activation>
            </activation>
            <properties>
                <maven.exec.ui.skip>true</maven.exec.ui.skip>
                <maven.exec.ui.code.generate.skip>true</maven.exec.ui.code.generate.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>remove-ui-code</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete dir="${project.basedir}/src/main/webapp" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>${rx-sdk.bundleId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <excludeDefaultDirectories>${maven.exec.ui.skip}</excludeDefaultDirectories>
                    <filesets>
                        <fileset>
                            <directory>${project.build.directory}</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                            <excludes>
                                <exclude>web-build/**/*</exclude>
                                <exclude>coverage/**/*</exclude>
                                <exclude>jsdocs/**/*</exclude>
                            </excludes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <skip>${maven.exec.ui.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>run-yarn-install</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>yarn</executable>
                            <workingDirectory>${project.basedir}/src/main/webapp</workingDirectory>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build archetype library</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>yarn</executable>
                            <workingDirectory>${project.basedir}/src/main/webapp</workingDirectory>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/web-build/webapp/scripts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/dist/apps/shell</directory>
                                    <includes>
                                        <include>*${project.artifactId}*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-assets</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/web-build/webapp/scripts/assets</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/dist/apps/shell/assets/libs/${project.artifactId}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>generate-angular-file</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.exec.ui.code.generate.skip}</skip>
                            <target>
                                <touch file="${basedir}/target/web-build/webapp/scripts/.angular" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.7</version>
                <configuration>
                    <showWeaveInfo>false</showWeaveInfo>
                    <source>${aspectj-complianceLevel.version}</source>
                    <target>${aspectj-complianceLevel.version}</target>
                    <Xlint>ignore</Xlint>
                    <complianceLevel>${aspectj-complianceLevel.version}</complianceLevel>
                    <verbose>false</verbose>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>${rx-sdk.groupId}</groupId>
                            <artifactId>com.bmc.arsys.rx.services</artifactId>
                        </aspectLibrary>
                        <aspectLibrary>
                            <groupId>${rx-sdk.groupId}</groupId>
                            <artifactId>com.bmc.arsys.rx.application</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                        <version>1.5.0</version>
                        <scope>system</scope>
                        <systemPath>${project.basedir}/pom.xml</systemPath>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven-bundle-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-Name>${rx-sdk.bundleName}</Bundle-Name>
                        <Bundle-SymbolicName>${rx-sdk.bundleId}</Bundle-SymbolicName>
                        <Bundle-Activator>com.example.bundle.MyApplication</Bundle-Activator>
                        <Bundle-Display-Version>${rx-sdk.bundleDisplayVersion}</Bundle-Display-Version>
                        <Import-Package>com.bmc.arsys*;version="[1,999)",
                        org.hibernate.validator.constraints*;version="[5,999)",
                        org.glassfish.jersey*;version="[2,999)",
                        javax.validation*;version="[1,999)",
                        org.glassfish*;version="[1,999)",
                        com.fasterxml*;version="[1,999)",
                        javax.annotation*;version="[1,999)",
                        org.aspectj*;version="[1,999)",
                        javax.ws.rs*;version="[2,999)",
                        org.apache.servicemix*;version="[5,999)",
                        *;resolution:=optional</Import-Package>
                        <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
                        <Bundle-Description>${rx-sdk.bundleDescription}</Bundle-Description>
                        <Bundle-Vendor>${rx-sdk.bundleDeveloperId}</Bundle-Vendor>
                        <RxBundle-DeveloperName>${rx-sdk.bundleDeveloperName}</RxBundle-DeveloperName>
                        <RxBundle-FriendlyName>${rx-sdk.bundleFriendlyName}</RxBundle-FriendlyName>
                        <RxBundle-IsApplication>${rx-sdk.bundleIsApplication}</RxBundle-IsApplication>
                        <RxBundle-Dependencies>${rx-sdk.bundleDependencies}</RxBundle-Dependencies>
                        <RxBundle-SchemaDataImportOrder>${rx-sdk.schemaDataImportOrder}</RxBundle-SchemaDataImportOrder>
                    </instructions>
                </configuration>
            </plugin>

            <!-- Need to compile with -parameters option to get parameter names through reflection API.
                These parameter names are used while exposing @Action within the bundle.-->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${javac.version}</source>
                    <target>${javac.version}</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- copy dependent libraries into lib directory for reference app deployer -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>${basedir}/target/web-build</directory>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.7,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
